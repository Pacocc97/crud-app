import { ProductoCompra } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { NavBar } from "../components/NavBar";
import VentanaAgregar from "../components/ventanaAgregar";
import slugify from "react-slugify";
import { useRouter } from "next/router";
import { CartProvider, useCart } from "react-use-cart";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [cartItems, setCartItems] = useState([]);
  const [productos, setProductos] = useState<ProductoCompra[]>([]);
  const [productosCarrito, setProductosCarrito] = useState([]);
  const [ventanaAbierta, setVentanaAbierta] = useState<boolean>(false);
  const { addItem, inCart } = useCart();

  const data = trpc.productos.verProductos.useQuery([], {
    onSuccess(productos) {
      setProductos(productos);
    },
  });

  console.log(productos, "esto es data");

  const { mutate: borrarProducto } = trpc.productos.borrarProducto.useMutation({
    onSuccess(productoCompra) {
      setProductos((prev) =>
        prev.filter((producto) => producto.id !== productoCompra.id)
      );
    },
  });
  const editarProducto = trpc.productos.editarProducto.useMutation({});
  const { asPath } = useRouter();
  //////////////////////////////////////////////////////////////////////////

  const {
    isEmpty,
    cartTotal,
    totalUniqueItems,
    items,
    updateItemQuantity,
    removeItem,
    emptyCart,
  } = useCart();

  const producto = items.map((item) => `${item.quantity}`);

  console.log(producto, "hola");

  return (
    <>
      <Head>
        <title>CRUD APP</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {ventanaAbierta && (
        <VentanaAgregar
          setProductos={setProductos}
          setVentanaAbierta={setVentanaAbierta}
        />
      )}

      <NavBar />
      <main className="mx-auto my-12 max-w-3xl">
        <div className="mb-5 flex justify-between">
          <h2 className="text-2xl font-semibold">Lista de productos</h2>
          <button
            onClick={() => setVentanaAbierta(true)}
            className="rounded-md bg-black p-2 text-sm text-white transition hover:bg-gray-600"
          >
            Añadir producto
          </button>
        </div>
        <hr className="mb-5" />
        <div className="mb-10 grid grid-cols-4 gap-4">
          {productos.map((producto) => {
            const alreadyAdded = inCart(producto.id);
            const { id } = producto;
            return (
              <div key={producto.id}>
                <h1 className="text-xs">id: {producto.id}</h1>
                <div className="max-w-sm overflow-hidden rounded shadow-lg">
                  <Link as={`${producto.id}`} href={`/[slug]`}>
                    <div className="px-4 py-2">
                      <span className="font-thin">Nombre:</span>
                      <div className="mb-2 text-xl font-bold">
                        {producto.nombre}
                      </div>
                      <h1>${Number(producto.price).toFixed(2)}</h1>
                      <h1>Disponibles: ({producto.stock})</h1>
                      <h3 className="font-thin">Descripción:</h3>
                      <p className="text-base text-gray-700">{producto.desc}</p>
                    </div>
                  </Link>
                  <div className="bg-black text-white">
                    {alreadyAdded ? (
                      <button disabled>¡Añadido!</button>
                    ) : (
                      <button onClick={() => addItem(producto)}>
                        Añadir a carrito
                      </button>
                    )}
                  </div>
                </div>
              </div>
            );
          })}
        </div>
        <hr className="mb-10" />
        <div>
          {isEmpty ? (
            <>
              <p>Carrito vacío</p>
            </>
          ) : (
            <>
              <h1 className="mb-2 text-xl font-bold">Carrito</h1>
              <h1>Productos en carrito: {totalUniqueItems}</h1>
              <h1>Total: ${Number(cartTotal).toFixed(2)}</h1>
              <h1></h1>

              <ul>
                {items.map((item) => (
                  <>
                    <hr />
                    <li key={item.id}>
                      {item.quantity} x <strong>{item.nombre}</strong>
                      <button
                        disabled={item.quantity == 1}
                        className="ml-5 border border-red-500 bg-transparent py-2 px-4 font-semibold text-red-700 before:rounded hover:border-transparent hover:bg-red-500 hover:text-white"
                        onClick={() =>
                          updateItemQuantity(item.id, item.quantity - 1)
                        }
                      >
                        -
                      </button>
                      <button
                        className=" ml-5 rounded border border-blue-500 bg-transparent py-2 px-4 font-semibold text-blue-700 hover:border-transparent hover:bg-blue-500 hover:text-white"
                        onClick={() =>
                          updateItemQuantity(item.id, item.quantity + 1)
                        }
                        disabled={item.quantity == item.stock}
                      >
                        +
                      </button>
                      <button
                        className=" ml-10 rounded border border-blue-500 bg-transparent py-2 px-4 font-semibold text-blue-700 hover:border-transparent hover:bg-blue-500 hover:text-white"
                        onClick={() => removeItem(item.id)}
                      >
                        Remover &times;
                      </button>
                    </li>
                    <li>
                      Total producto: ${(item.quantity * item.price).toFixed(2)}
                    </li>
                    <hr />
                  </>
                ))}
              </ul>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
